# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = ["tests.py", "test_*.py"]

# ==== Coverage ====
[tool.coverage.run]
include = ["homebin/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main", "django_stubs_ext"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2


[tool.poetry]
name = "homebin"
version = "0.2.0a0"
description = "Home Inventory and Storage Organization System"
authors = ["Karl Wooster <karl@woostertech.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
# Django
# -----------------------------------------------------------
django = "^5.0.9"
# Production
# -----------------------------------------------------------
gunicorn = { version = "^23.0.0", platform = "linux" }
psycopg = [
    { extras = [
        "binary",
    ], version = "^3.2.3", markers = "sys_platform == 'win32'" },
    { extras = [
        "c",
    ], version = "^3.2.3", markers = "sys_platform == 'linux'" },
]
# base
# -----------------------------------------------------------
django-environ = "^0.11.2"
django-model-utils = "^4.5.1"
django-allauth = { version = "^65.0.2", extras = ["mfa"] }
django-crispy-forms = "^2.3"
crispy-bootstrap5 = "^2024.10"
django-compressor = "^4.5.1"
django-redis = "^5.4.0"
djangorestframework = "^3.12.2"
django-cors-headers = "^4.5.0"
drf-spectacular = "^0.27.2"
sentry-sdk = "^2.16.0"
hiredis = "^3.0.0"
django-storages = { extras = ["s3"], version = "^1.14.4" }
django-anymail = { extras = ["brevo"], version = "^12.0" }
python-slugify = "^8.0.4"
pillow = "^11.0.0"
argon2-cffi = "^23.1.0"
whitenoise = "^6.7.0"
redis = "^5.1.1"
loguru = "^0.7.2"
pydantic = "^2.9.2"
typeid-python = "^0.3.1"
django-rubble = {git = "https://github.com/WoosterTech/django-rubble.git", allow-prereleases = true, platform = "linux"}


[tool.poetry.group.dev]
optional = true


[tool.poetry.group.dev.dependencies]
watchdog = "^4.0.2"
werkzeug = { version = "^3.0.4", extras = ["watchdog"] }
ipdb = "^0.13.13"
# psycopg = {extras = ["binary"], version = "^3.2.3", platform = "win32"}
# Code Quality
# -----------------------------------------------------------
mypy = "^1.11.2"
django-stubs = { extras = ["compatible-mypy"], version = "^5.1.0" }
djangorestframework-stubs = "^3.15.1"
ruff = "^0.6.9"
djlint = "^1.35.2"
pre-commit = "^4.0.1"
# Django
# -----------------------------------------------------------
django-debug-toolbar = "^4.4.6"
django-extensions = "^3.2.3"


[tool.poetry.group.test]
optional = true


[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-sugar = "^1.0.0"
pytest-django = "^4.9.0"
factory-boy = "^3.3.1"
django-coverage-plugin = "^3.1.0"


[tool.poetry.group.docs]
optional = true


[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"
sphinx-autobuild = "^2024.10.3"



[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
